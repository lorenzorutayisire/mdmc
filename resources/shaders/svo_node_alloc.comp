#version 430

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(binding = 1, r32ui) uniform uimageBuffer u_octree;

layout(binding = 2) uniform atomic_uint u_alloc_counter; // Counts how many allocations has been done.

uniform uint u_start; // The index where the current level starts.
uniform uint u_count; // How many nodes this level has.

uniform uint u_alloc_start; // The last free index of the buffer, where to allocate.

void main()
{
	uint node_addr = gl_GlobalInvocationID.x;
	if (node_addr >= u_count)
		return;

	if ((node_addr & 0x80000000) == 1)
	{
		uint child_addr;
		
		child_addr = atomicCounterIncrement(u_alloc_counter);

		child_addr *= 8;
		child_addr += u_alloc_start;
		child_addr |= 0x80000000;

		imageStore(u_octree, int(u_start + node_addr), uvec4(child_addr));
	}
}

